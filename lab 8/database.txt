database-students
student(integer,symbol,integer,integer).
predicates
nondeterm run.
nondeterm process(char).
nondeterm check(char).
clauses
check('y').
check('n'):-fail,!.
check('N'):-fail,!.
process('a'):-write("enter id :"),nl,readint(Id),not(student(Id,_,_,_)),
write("enter name :"),readln(Name),nl,write("enter age :"),readint(Age),nl,
write("enter degree :"),readint(D),assert(student(Id,Name,Age,D),students),
write("successfully added"),nl,!.
process('a'):-write("id is already added before").
process('v'):-student(Id,N,A,D),write("id=",Id),write("name=",N),
write("age=",A),write("degree=",D),!.
process('v'):-write("nothing to view").
process('d'):-write("enter the id : "),readint(Id),retract(student(Id,_,_,_),students). 
process('d'):-write("id not found"),fail.
process('u'):-write("enter id you want to update"),
readint(Id),retract(student(Id,Name,_,_),students),
nl,write("enter age :"),readint(Age),nl,
write("enter degree :"),readint(D),
assert(student(Id,Name,Age,D),students),write("successfully updated").
process('u'):-write("not exitsed").

run:-write("Add(a),View(v),Delete(d), Update(u),:"),readchar(C),
write(" ",C),nl,process(C),nl,write("do you want to continue 'y'or'n'")
,readchar(M),check(M),run.




goal

run.